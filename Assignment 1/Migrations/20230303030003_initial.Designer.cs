// <auto-generated />
using System;
using Assignment_1.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Assignment_1.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20230303030003_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Assignment_1.Models.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemId"), 1L, 1);

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ClosingDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("Condition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("MinCost")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<DateTime?>("OpeningDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.HasKey("ItemId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            ItemId = 1,
                            Category = "Shoes",
                            ClosingDate = new DateTime(2023, 3, 5, 22, 0, 2, 920, DateTimeKind.Local).AddTicks(428),
                            Condition = "Used",
                            Image = "shoes.png",
                            ItemDescription = "really cool shoes",
                            ItemName = "Air Jordan",
                            MinCost = 100.0,
                            OpeningDate = new DateTime(2023, 3, 2, 22, 0, 2, 920, DateTimeKind.Local).AddTicks(398)
                        },
                        new
                        {
                            ItemId = 2,
                            Category = "Shoes",
                            ClosingDate = new DateTime(2023, 3, 5, 22, 0, 2, 920, DateTimeKind.Local).AddTicks(433),
                            Condition = "New",
                            Image = "nike.jpg",
                            ItemDescription = "really really cool shoes",
                            ItemName = "Nike",
                            MinCost = 120.0,
                            OpeningDate = new DateTime(2023, 3, 2, 22, 0, 2, 920, DateTimeKind.Local).AddTicks(432)
                        },
                        new
                        {
                            ItemId = 3,
                            Category = "Shoes",
                            ClosingDate = new DateTime(2023, 3, 5, 22, 0, 2, 920, DateTimeKind.Local).AddTicks(436),
                            Condition = "New",
                            Image = "spiderman.jpg",
                            ItemDescription = "Cool Spider-man shoes",
                            ItemName = "Spider-man Shoes",
                            MinCost = 2000.0,
                            OpeningDate = new DateTime(2023, 3, 2, 22, 0, 2, 920, DateTimeKind.Local).AddTicks(435)
                        },
                        new
                        {
                            ItemId = 4,
                            Category = "Sports",
                            ClosingDate = new DateTime(2023, 3, 5, 22, 0, 2, 920, DateTimeKind.Local).AddTicks(438),
                            Condition = "New",
                            Image = "bicycle.jpg",
                            ItemDescription = "Bicycle",
                            ItemName = "Bicycle",
                            MinCost = 124.98999999999999,
                            OpeningDate = new DateTime(2023, 3, 2, 22, 0, 2, 920, DateTimeKind.Local).AddTicks(437)
                        },
                        new
                        {
                            ItemId = 5,
                            Category = "Phone",
                            ClosingDate = new DateTime(2023, 3, 5, 22, 0, 2, 920, DateTimeKind.Local).AddTicks(440),
                            Condition = "New",
                            Image = "iPhone13.png",
                            ItemDescription = "Iphone 13 128GB",
                            ItemName = "Iphone 13",
                            MinCost = 1120.0,
                            OpeningDate = new DateTime(2023, 3, 2, 22, 0, 2, 920, DateTimeKind.Local).AddTicks(440)
                        },
                        new
                        {
                            ItemId = 6,
                            Category = "Phone",
                            ClosingDate = new DateTime(2023, 3, 5, 22, 0, 2, 920, DateTimeKind.Local).AddTicks(443),
                            Condition = "New",
                            Image = "samsung.png",
                            ItemDescription = "Samsung Galaxy 23 256GB",
                            ItemName = "Samsung Galaxy 23",
                            MinCost = 2000.0,
                            OpeningDate = new DateTime(2023, 3, 2, 22, 0, 2, 920, DateTimeKind.Local).AddTicks(442)
                        });
                });

            modelBuilder.Entity("Assignment_1.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            EmailAddress = "Seller1@gmail.ca",
                            Password = "Password",
                            UserType = "seller",
                            Username = ""
                        },
                        new
                        {
                            UserId = 2,
                            EmailAddress = "buyer1@gmail.ca",
                            Password = "password1",
                            UserType = "buyer",
                            Username = ""
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
